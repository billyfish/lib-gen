#ifndef TEST_INTERFACE_DEF_H
#define TEST_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.1.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef TEST_LOADER1_H
#include <test/loader1.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct TestIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct TestIFace *Self);
	uint32 APICALL (*Release)(struct TestIFace *Self);
	void APICALL (*Expunge)(struct TestIFace *Self);
	struct Interface * APICALL (*Clone)(struct TestIFace *Self);
	BOOLEAN APICALL (*InitialiseLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p, const HashTable * const config_p);
	BOOLEAN APICALL (*InitialiseLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p, const HashTable * const config_p);
	BOOLEAN APICALL (*InitialiseLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p, const HashTable * const config_p);
	void APICALL (*ClearLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p);
	void APICALL (*ClearLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p);
	void APICALL (*ClearLoaderData)(struct TestIFace *Self, LoaderModuleData * data_p);
	Trajectory * APICALL (*LoadTrajectory)(struct TestIFace *Self, LoaderModule * loader_p, const char * const path, const double64 first_frame_time, const double64 chunk_time, const uint32 num_frames_to_skip, EventListener * events_listener_p);
	Trajectory * APICALL (*LoadTrajectory)(struct TestIFace *Self, LoaderModule * loader_p, const char * const path, const double64 first_frame_time, const double64 chunk_time, const uint32 num_frames_to_skip, EventListener * events_listener_p);
	Trajectory * APICALL (*LoadTrajectory)(struct TestIFace *Self, LoaderModule * loader_p, const char * const path, const double64 first_frame_time, const double64 chunk_time, const uint32 num_frames_to_skip, EventListener * events_listener_p);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* TEST_INTERFACE_DEF_H */
